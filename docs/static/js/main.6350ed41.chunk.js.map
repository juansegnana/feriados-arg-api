{"version":3,"sources":["components/Footer.js","helpers/obtenerFecha.js","components/FeriadoItem.js","components/ListadoCompleto.js","components/ProximoFeriado.js","hooks/useFetch.js","index.js"],"names":["Footer","className","href","target","rel","obtenerFecha","date","dia","getDate","mes","getMonth","mesNombre","año","getFullYear","FeriadoItem","motivo","tipo","info","ListadoCompleto","datos","map","fer","index","ProximoFeriado","newData","daysLeft","dateNext","Date","url","isMounted","useRef","useState","data","loading","error","state","setState","useEffect","current","fetch","then","resp","json","useFetch","find","elem","dateToday","parseInt","msg","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6350ed41.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <footer className=\"text-muted pt-4\">\r\n           <p>\r\n               En progreso. Usando React y API de <a href=\"https://nolaborables.com.ar/\" target=\"_blank\" rel=\"noopener noreferrer\" > NoLaborables</a>\r\n                . \r\n                <br />\r\n                <a href=\"mailto:segnanajuan@gmail.com\" className=\"text-decoration-none\">Juan Segnana</a>\r\n            </p>\r\n        </footer>\r\n    )\r\n}\r\n","\r\nexport const obtenerFecha = ( date ) => {\r\n\r\n    const meses = [ \"Enero\",\"Febrero\",\"Marzo\",\"Abril\",\"Mayo\",\"Junio\",\"Julio\",\"Agosto\",\"Septiembre\",\"Octubre\",\"Noviembre\",\"Diciembre\" ];\r\n\r\n    // const date = new Date();\r\n    \r\n    const fecha = {\r\n        dia: date.getDate(),\r\n        mes: date.getMonth() + 1,\r\n        mesNombre: meses[ date.getMonth() ],\r\n        año: date.getFullYear()\r\n    }; \r\n    \r\n    // Uso temporal para pruebas\r\n    /*\r\n    const fecha = {\r\n        dia: 1,\r\n        mes: 1,\r\n        mesNombre: meses[ 0 ],\r\n        año: 2021\r\n    };\r\n    */\r\n    \r\n    return fecha;\r\n}\r\n","import React from 'react'\r\n\r\nexport const FeriadoItem = ({ motivo, tipo, info, mes, dia }) => {\r\n    return (\r\n        <div className=\"col\" >\r\n            <div className=\"card h-100\" >\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\"> { motivo } </h5>\r\n                    <p className=\"card-text\">\r\n                        Tipo: { tipo } <br />\r\n                        <a\r\n                            className=\"btn btn-primary mt-2\"\r\n                            href={ info }\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            Más info\r\n                        </a> \r\n                    </p>\r\n                    <p className=\"card-text\"><small className=\"text-muted\"> Fecha: { dia }/{ mes } </small></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","// TODO: Listar todos los feriados del año. \r\n\r\nimport React from 'react';\r\nimport { FeriadoItem } from './FeriadoItem';\r\nimport '../styles/ListadoCompleto.css'\r\n\r\nexport const ListadoCompleto = ({ año, datos }) => {\r\n    // console.log(datos);\r\n    return (\r\n        <div>\r\n            <h3> Listado completo de feriados { año }</h3>\r\n            <hr />\r\n            <div className=\"row row-cols-2 row-cols-md-3 g-4 text-center\" >\r\n                {\r\n                    datos.map( ( fer, index) => (\r\n                        <FeriadoItem \r\n                            key={ `id_${ index }` }\r\n                            { ...fer }\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","// API => https://pjnovas.gitbooks.io/no-laborables/content/feriados.html\r\n\r\nimport React from 'react';\r\nimport { obtenerFecha } from '../helpers/obtenerFecha';\r\nimport { useFetch } from '../hooks/useFetch';\r\n\r\nimport '../styles/ProximoFeriado.css'\r\nimport { ListadoCompleto } from './ListadoCompleto';\r\n\r\nexport const ProximoFeriado = () => {\r\n\r\n    const { dia, mes, mesNombre, año } = obtenerFecha(new Date());\r\n    \r\n    let newData;\r\n    let daysLeft;\r\n    let dateNext;\r\n    \r\n    // ?incluir=opcional\r\n    const { loading, data } = useFetch(`https://nolaborables.com.ar/api/v2/feriados/${ año }`);\r\n    \r\n    // Obtener feriado más cercano\r\n    if ( !!data ){\r\n\r\n        newData = data.find( ( elem ) =>{\r\n            // Devolver PROXIMO feriado = (elem.mes === mes && elem.dia > dia) || elem.mes > mes;\r\n            // Primero mira si el mes es igual y el dia es mayor al de hoy.\r\n            // O bien, pregunta si el mes es mayor al actual\r\n            // O si el mes y el día es igual al de hoy. Siendo un dia feriado.\r\n            return ((elem.mes === mes && elem.dia > dia) || elem.mes > mes) || (elem.mes === mes && elem.dia === dia);\r\n            \r\n        });\r\n\r\n        // Si no existe coincidencia, está próximo a Año Nuevo.\r\n        if ( !newData ) {\r\n            newData = data[0];\r\n            newData.año = año+1;\r\n        }\r\n        dateNext = new Date( (!!newData.año ? newData.año : año), newData.mes - 1, newData.dia );\r\n        \r\n        const dateToday = new Date( año, mes-1, dia );\r\n        // Obtener dias restantes\r\n        daysLeft = parseInt((dateNext - dateToday) / (1000 * 60 * 60 * 24), 10);\r\n        dateNext = obtenerFecha( dateNext );\r\n\r\n    };\r\n        \r\n    let msg = '';\r\n    switch ( daysLeft ) {\r\n        case 1:\r\n            msg = `Falta ${ daysLeft } día.`;\r\n            break;\r\n        case 0:\r\n            msg = `Buen feriado!`;\r\n            break;\r\n        default:\r\n            msg = `Faltan ${ daysLeft } días.`;\r\n            break;\r\n    }\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <h1>Buscador de feriados</h1>\r\n            <hr />\r\n\r\n            <div className=\"card text-center\">\r\n                <div className=\"card-body\">\r\n\r\n                    <h5 className=\"card-title\"> Hoy es </h5>\r\n                    <p className=\"card-text\"> {dia} de {mesNombre} del {año} </p>\r\n                \r\n                </div>\r\n            </div>\r\n            \r\n            {\r\n                loading\r\n                ?\r\n                    (\r\n                        <div className=\"alert alert-info text-center\">Cargando...</div>\r\n                    ) \r\n                :\r\n                    (\r\n                        <div className=\"card text-center\">\r\n                            <div className=\"card-header\">\r\n                                Próximo feriado\r\n                            </div>\r\n\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">\r\n                                    { newData.motivo } \r\n                                </h5>\r\n                                <p className=\"card-text\">\r\n                                    Tipo de feriado: { newData.tipo }.\r\n                                    <br />\r\n                                    Fecha: { dateNext.dia }/{ dateNext.mes }/{ dateNext.año }\r\n                                </p>\r\n                                <a\r\n                                    className=\"btn btn-primary\"\r\n                                    href={ newData.info }\r\n                                    target=\"_blank\"\r\n                                    rel=\"noopener noreferrer\"\r\n                                >\r\n                                    Más info\r\n                                </a>\r\n                            </div>\r\n                            \r\n                            <div className=\"card-footer text-muted\">\r\n                                { msg }\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    )\r\n                }\r\n            \r\n            {\r\n                !loading && <ListadoCompleto año={ año } datos={data} />\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useRef, useState } from 'react'\r\n\r\nexport const useFetch = ( url ) => {\r\n\r\n    const isMounted = useRef(true);\r\n\r\n    const [state, setState] = useState({ data: null, loading: true, error: null });\r\n\r\n    useEffect(() => {\r\n    \r\n        return () => {\r\n            isMounted.current = false;\r\n        }\r\n\r\n    }, [])\r\n\r\n    useEffect( () => {\r\n        \r\n        setState({ data: null, loading: true, error: 'useEffect' });\r\n        // console.log( isMounted.current );\r\n        \r\n        fetch( url )\r\n            .then( resp => resp.json() )\r\n            .then( data => {\r\n                if( isMounted.current ) {\r\n                    setState({\r\n                        loading: false,\r\n                        error: null,\r\n                        data\r\n                    });\r\n                }\r\n            });\r\n            \r\n    }, [ url ])\r\n\r\n    return state;\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Footer } from './components/Footer';\nimport { ProximoFeriado } from './components/ProximoFeriado';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ProximoFeriado />\n    <Footer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}